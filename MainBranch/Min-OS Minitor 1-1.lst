0001   0000             ;MIN-OS-Serial -  VER 1.0A
0002   0000             ;
0003   0000             ;
0004   0000             ;Ram located at 8000h
0005   0000             ;Stack Pointer at 88FFh
0006   0000             ;Change as needed
0007   0000             ;If this code is used give credit to hackling92.  Nothing special just use my name. Thank You
0008   0000             
0009   0000             
0010   0000             
0011   0000             
0012   0000             	; start the program at memory region 1 for programing simplicity
0013   0000             	.ORG 0001h
0014   0001             
0015   0001             lf	EQU 0Ah		; declair Line Feed
0016   0001             
0017   0001 31 FF 88    	LD SP,88FFh	; set the stack pointer
0018   0004             
0019   0004             
0020   0004             inituart:
0021   0004 3E 80       	LD A,10000000b  ; set div latch enable 1
0022   0006 D3 03       	OUT (03h),A	; write lcr
0023   0008 3E 01       	LD A,01h	; set Divisor was 0x0C
0024   000A D3 00       	OUT (00h),A	; dll 0x07 (#7)
0025   000C 3E 00       	LD A,00h
0026   000E D3 01       	OUT (01h),A	; dlm 0x00
0027   0010 3E 0B       	LD A,00001011b	; set dle to 0, break to 0, odd parity, 1 stop bit, 8 bytes
0028   0012 D3 03       	OUT (03h),A	; write new configured lcr
0029   0014 C3 7C 00    	JP startloop	; program start
0030   0017             		
0031   0017             
0032   0017             ;-----------------------
0033   0017             putc:			;Put Charactor Loop
0034   0017 CD 2D 00    	CALL tx_ready
0035   001A D3 00       	OUT (00h), A
0036   001C C9          	RET
0037   001D             
0038   001D             puts:			;Put String Loop
0039   001D F5          	PUSH AF
0040   001E E5          	PUSH HL
0041   001F             puts_loop:
0042   001F 7E          	LD A, (HL)
0043   0020 FE 00       	CP 0
0044   0022 28 06       	JR Z, puts_end
0045   0024 CD 17 00    	CALL putc
0046   0027 23          	INC HL
0047   0028 18 F5       	JR puts_loop
0048   002A             puts_end:
0049   002A E1          	POP HL
0050   002B F1          	POP AF
0051   002C C9          	RET
0052   002D             ;-----------------------
0053   002D             
0054   002D             
0055   002D             tx_ready:		;Check For Charactor In UART
0056   002D F5          	PUSH AF
0057   002E             tx_ready_loop:
0058   002E DB 05       	IN A, (05h)
0059   0030 CB 6F       	BIT 5, A
0060   0032 28 FA       	JR Z, tx_ready_loop
0061   0034 F1          	POP AF
0062   0035 C9          	RET
0063   0036             
0064   0036             
0065   0036             ;-----------------------
0066   0036             
0067   0036             uin:			;Get Charactor
0068   0036 DB 05       	IN A, (05h)
0069   0038 CB 47       	BIT 0,A
0070   003A CA 36 00    	JP Z,uin
0071   003D DB 00       	IN A,(00h)
0072   003F C9          	RET
0073   0040             
0074   0040             
0075   0040             ;-----------------------
0076   0040             
0077   0040             make_hex:		; convert ascii from uart to hex
0078   0040 06 00       	LD B,0
0079   0042 CD 4A 00    	CALL h1
0080   0045 07          	RLCA
0081   0046 07          	RLCA
0082   0047 07          	RLCA
0083   0048 07          	RLCA
0084   0049 47          	LD B,A
0085   004A             h1:
0086   004A CD 36 00    	CALL uin
0087   004D 4F          	LD C,A
0088   004E CD 17 00    	CALL putc
0089   0051 E6 70       	AND 070h
0090   0053 FE 40       	CP 040h
0091   0055 DA 60 00    	JP C,h2
0092   0058 79          	LD A,C
0093   0059 E6 0F       	AND 00Fh
0094   005B C6 09       	ADD A,9
0095   005D C3 63 00    	JP h3
0096   0060             h2:
0097   0060 79          	LD A,C
0098   0061 E6 0F       	AND 00Fh
0099   0063             h3:
0100   0063 B0          	OR B
0101   0064 C9          	RET
0102   0065             
0103   0065             
0104   0065             
0105   0065             Num2Hex:
0106   0065 7C          	LD A,H
0107   0066 CD 6F 00    	CALL Num1
0108   0069 57          	LD D,A
0109   006A 7C          	LD A,H
0110   006B CD 73 00    	CALL Num2
0111   006E 5F          	LD E,A
0112   006F             
0113   006F             Num1:
0114   006F 1F          	RRA
0115   0070 1F          	RRA
0116   0071 1F          	RRA
0117   0072 1F          	RRA
0118   0073             Num2:
0119   0073 F6 F0       	OR 240
0120   0075 27          	DAA
0121   0076 C6 A0       	ADD A,160
0122   0078 CE 40       	ADC A,40h
0123   007A 4F          	LD C,A
0124   007B             	
0125   007B C9          	RET
0126   007C             
0127   007C             ;-----------------------	
0128   007C             	
0129   007C             startloop:		; starting point for program	
0130   007C 21 92 01    	LD HL, starttext	;Load Start Message Location
0131   007F CD 1D 00    	CALL puts	; print start message
0132   0082             
0133   0082             ;----------------------------------------------
0134   0082             command_loop:
0135   0082 21 99 01    	LD HL,command_msg
0136   0085 CD 1D 00    	CALL puts
0137   0088 CD 36 00    	CALL uin
0138   008B CD 17 00    	CALL putc
0139   008E FE 4A       	CP 4Ah
0140   0090 CA 9D 00    	JP Z,j_loop
0141   0093 FE 50       	CP 50h
0142   0095 CA AB 00    	JP Z,p_loop
0143   0098 FE 52       	CP 52h
0144   009A CA C3 00    	JP Z,r_loop
0145   009D             
0146   009D             
0147   009D             j_loop:
0148   009D CD 36 00    	CALL uin
0149   00A0 CD 17 00    	CALL putc
0150   00A3 FE 4D       	CP 4Dh		;JM COMMAND
0151   00A5 CA 00 81    	JP Z,8100h
0152   00A8 C3 82 00    	JP command_loop
0153   00AB             
0154   00AB             p_loop:
0155   00AB CD 36 00    	CALL uin
0156   00AE CD 17 00    	CALL putc
0157   00B1 FE 45       	CP 45h		;PE COMMAND
0158   00B3 CA D6 00    	JP Z,pe_com
0159   00B6 FE 4F       	CP 4Fh		;PO COMMAND
0160   00B8 CA 03 01    	JP Z,po_com
0161   00BB FE 2B       	CP 2Bh		;P+ COMMAND
0162   00BD CA 28 01    	JP Z,p_plus_com
0163   00C0 C3 82 00    	JP command_loop
0164   00C3             
0165   00C3             r_loop:
0166   00C3 CD 36 00    	CALL uin
0167   00C6 CD 17 00    	CALL putc
0168   00C9 FE 53       	CP 53h		;RS COMMAND
0169   00CB CA 00 00    	JP Z,0000h
0170   00CE FE 50       	CP 50h		;RP COMMAND "REMOTE PROGRAM"
0171   00D0 CA 53 01    	JP Z,serial_program
0172   00D3 C3 82 00    	JP command_loop
0173   00D6             
0174   00D6             
0175   00D6             ;---------------------------------------------------
0176   00D6             pe_com:			;Peek Command
0177   00D6 3E 0A       	LD A,lf
0178   00D8 CD 17 00    	CALL putc
0179   00DB 21 88 01    	LD HL, address
0180   00DE CD 1D 00    	CALL puts
0181   00E1 CD 40 00    	CALL make_hex
0182   00E4 57          	LD D,A
0183   00E5 CD 40 00    	CALL make_hex
0184   00E8 5F          	LD E,A
0185   00E9 3E 0A       	LD A, lf
0186   00EB CD 17 00    	CALL putc
0187   00EE 1A          	LD A,(DE)
0188   00EF 67          	LD H,A
0189   00F0 CD 65 00    	CALL Num2Hex
0190   00F3 7A          	LD A,D
0191   00F4 CD 17 00    	CALL putc
0192   00F7 7B          	LD A,E
0193   00F8 CD 17 00    	CALL putc
0194   00FB 3E 0A       	LD A,lf
0195   00FD CD 17 00    	CALL putc
0196   0100 C3 82 00    	JP command_loop
0197   0103             
0198   0103             
0199   0103             po_com:			;Poke Command
0200   0103 21 88 01    	LD HL, address
0201   0106 CD 1D 00    	CALL puts
0202   0109 CD 40 00    	CALL make_hex
0203   010C 57          	LD D,A
0204   010D CD 40 00    	CALL make_hex
0205   0110 5F          	LD E,A
0206   0111 3E 0A       	LD A,lf
0207   0113 CD 17 00    	CALL putc
0208   0116 21 A3 01    	LD HL,data_msg
0209   0119 CD 1D 00    	CALL puts
0210   011C CD 40 00    	CALL make_hex
0211   011F 12          	LD (DE),A
0212   0120 3E 0A       	LD A,lf
0213   0122 CD 17 00    	CALL putc
0214   0125 C3 82 00    	JP command_loop
0215   0128             
0216   0128             
0217   0128             p_plus_com:		;Poke Command With Auto Inc
0218   0128 21 67 01    	LD HL,start_add
0219   012B CD 1D 00    	CALL puts
0220   012E CD 40 00    	CALL make_hex
0221   0131 57          	LD D,A
0222   0132 CD 40 00    	CALL make_hex
0223   0135 5F          	LD E,A
0224   0136 3E 0A       	LD A,lf
0225   0138 CD 17 00    	CALL putc
0226   013B             p_plus_com_loop_1:
0227   013B 21 A3 01    	LD HL,data_msg
0228   013E CD 1D 00    	CALL puts
0229   0141 CD 40 00    	CALL make_hex
0230   0144 12          	LD (DE),A
0231   0145 3E 0A       	LD A,lf
0232   0147 CD 17 00    	CALL putc
0233   014A 13          	INC DE
0234   014B FE 1B       	CP 1Bh		;ESC
0235   014D CA 82 00    	JP Z,command_loop
0236   0150 C3 3B 01    	JP p_plus_com_loop_1
0237   0153             
0238   0153             ;---------------------------------------------------
0239   0153             
0240   0153             serial_program:
0241   0153 21 00 81    	LD HL,8100h	; set location to store program sent from serial terminal
0242   0156             secloop:
0243   0156 CD 36 00    	CALL uin
0244   0159 CD 17 00    	CALL putc
0245   015C FE 7F       	CP 7Fh		; Check for delete to know when to execute program in ram
0246   015E CA 00 81    	JP Z,8100h	; If delete jump to ram location
0247   0161 77          	LD (HL),A	; used to store above hex into memory
0248   0162 23          	INC HL		; incriment hl for next byte
0249   0163 C3 56 01    	JP secloop	; loop until makehex finds 'del', then execute jump to 8100h
0250   0166             	
0251   0166 76          	HALT		; stop cpu in the event that the program misbehaves 
0252   0167             
0253   0167             	
0254   0167             
0255   0167             
0256   0167             
0257   0167             ;Strings
0258   0167             ;--------------------------------------------------
0259   0167             start_add:		; PE/PO Start Address
0260   0167 53 74 61 72 	DEFB "Start Add: ",0
0260   016B 74 20 41 64 
0260   016F 64 3A 20 00 
0261   0173             end_add:		; PE End Address
0262   0173 45 6E 64 20 	DEFB "End Add: ",0
0262   0177 41 64 64 3A 
0262   017B 20 00       
0263   017D             new_dat:		; New Data For PO Command
0264   017D 4E 65 77 20 	DEFB "New Data: ",0
0264   0181 44 61 74 61 
0264   0185 3A 20 00    
0265   0188             address:		; Address Text
0266   0188 41 64 64 72 	DEFB "Address: ",0
0266   018C 65 73 73 3A 
0266   0190 20 00       
0267   0192             starttext:		; start message
0268   0192 52 65 61 64 	DEFB "Ready", lf,0
0268   0196 79 0A 00    
0269   0199             command_msg:		; Enter Command message
0270   0199 43 6F 6D 6D 	DEFB "Command: ",0
0270   019D 61 6E 64 3A 
0270   01A1 20 00       
0271   01A3             data_msg:		; Data Message
0272   01A3 44 61 74 61 	DEFB "Data: ",0
0272   01A7 3A 20 00    
0273   01AA             ;--------------------------------------------------
0274   01AA             	
0275   01AA             
0276   01AA             
0277   01AA             	.ORG 8100h
0278   8100 3E 02       	LD A,2
0279   8102 C6 02       	ADD A,2
0280   8104 32 00 82    	LD (8200h),A
0281   8107 C3 82 00    	JP command_loop
Number of errors = 0
